{
    "name": "graphicaldebugging",
    "language": "cpp",
    "types": [
        {
            "type": "boost::array<.+>",
            "kind": "container",
            "array": {
                "start": "$this.elems",
                "size": "$T1"
            }
        },
        {
            "type": "boost::chrono::duration<.+>",
            "kind": "value",
            "name": "$this.rep_"
        },
        {
            "type": "boost::geometry::model::point<.+cartesian>",
            "kind": "point",
            "system": "cartesian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::point<.+spherical_equatorial.+degree.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "degree",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::point<.+spherical_equatorial.+radian.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "radian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::point<.+geographic.+degree.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "degree",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::point<.+geographic.+radian.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "radian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d2::point_xy<.+cartesian>",
            "kind": "point",
            "system": "cartesian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d2::point_xy<.+spherical_equatorial.+degree.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "degree",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d2::point_xy<.+spherical_equatorial.+radian.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "radian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d2::point_xy<.+geographic.+degree.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "degree",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d2::point_xy<.+geographic.+radian.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "radian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d3::point_xyz<.+cartesian>",
            "kind": "point",
            "system": "cartesian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d3::point_xyz<.+spherical_equatorial.+degree.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "degree",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d3::point_xyz<.+spherical_equatorial.+radian.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "radian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d3::point_xyz<.+geographic.+degree.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "degree",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::d3::point_xyz<.+geographic.+radian.+>",
            "kind": "point",
            "system": "geographic",
            "unit": "radian",
            "coordinates": {
                "x": "$this.m_values[0]",
                "y": "$this.m_values[1]"
            }
        },
        {
            "type": "boost::geometry::model::linestring<.+>",
            "kind": "linestring",
            "points": {
                "container": { "name": "*($T1<$T0,$T2<$T0 > >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::linestring<.+>",
            "kind": "linestring",
            "points": {
                "container": { "name": "*($T1<$T0,$T2<$T0> >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::ring<.+>",
            "kind": "ring",
            "points": {
                "container": { "name": "*($T3<$T0,$T4<$T0 > >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::ring<.+>",
            "kind": "ring",
            "points": {
                "container": { "name": "*($T3<$T0,$T4<$T0> >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::polygon<.+>",
            "kind": "polygon",
            "exteriorring": { "name": "$this.m_outer" },
            "interiorrings": {
                "container": { "name": "$this.m_inners" }
            },
            "_comment": "This doesn't work with GDB right now because the types of members are typedefs"
        },
        {
            "type": "boost::geometry::model::multi_point<.+>",
            "kind": "multipoint",
            "points": {
                "container": { "name": "*($T1<$T0,$T2<$T0 > >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::multi_point<.+>",
            "kind": "multipoint",
            "points": {
                "container": { "name": "*($T1<$T0,$T2<$T0> >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::multi_linestring<.+>",
            "kind": "multilinestring",
            "linestrings": {
                "container": { "name": "*($T1<$T0,$T2<$T0 > >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::multi_linestring<.+>",
            "kind": "multilinestring",
            "linestrings": {
                "container": { "name": "*($T1<$T0,$T2<$T0> >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::multi_polygon<.+>",
            "kind": "multipolygon",
            "polygons": {
                "container": { "name": "*($T1<$T0,$T2<$T0 > >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::model::multi_polygon<.+>",
            "kind": "multipolygon",
            "polygons": {
                "container": { "name": "*($T1<$T0,$T2<$T0> >*)(&$this)" }
            },
            "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
        },
        {
            "type": "boost::geometry::index::detail::varray<.+>",
            "kind": "container",
            "array": {
                "start": "($T0*)$this.m_storage.data_.buf",
                "size": "$this.m_size"
            }
        },
        {
            "type": "boost::units::quantity<.+>",
            "kind": "value",
            "name": "$this.val_"
        }
    ]
}