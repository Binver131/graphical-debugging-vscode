[
    {
        "type": "[a-zA-Z_][\\w<,>:\\s]*\\[\\d+\\]",
        "kind": "container",
        "array": {
            "start": "$this",
            "size": "$N0"
        },
        "_comment": "C array"
    },
    {
        "type": "std::pair<.+>",
        "kind": "point",
        "coordinates": {
            "x": "$this.first",
            "y": "$this.second"
        }
    },
    {
        "type": "boost::geometry::model::point<.+>",
        "kind": "point",
        "coordinates": {
            "x": "$this.m_values[0]",
            "y": "$this.m_values[1]"
        }
    },
    {
        "type": "boost::geometry::model::point_xy<.+>",
        "kind": "point",
        "coordinates": {
            "x": "$this.m_values[0]",
            "y": "$this.m_values[1]"
        }
    },
    {
        "type": "boost::geometry::model::linestring<.+>",
        "kind": "linestring",
        "points": {
            "container": { "name": "*($T1<$T0,$T2<$T0 > >*)(&$this)" }
        },
        "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
    },
    {
        "type": "boost::geometry::model::linestring<.+>",
        "kind": "linestring",
        "points": {
            "container": { "name": "*($T1<$T0,$T2<$T0> >*)(&$this)" }
        },
        "_comment": "msvc requires no spaces in types besides space between > > so there are 2 versions"
    },
    {
        "type": "boost::geometry::index::detail::varray<.+>",
        "kind": "container",
        "array": {
            "start": "($T0*)$this.m_storage.data_.buf",
            "size": "$this.m_size"
        }
    },
    {
        "type": "boost::array<.+>",
        "kind": "container",
        "array": {
            "start": "$this.elems",
            "size": "$T1"
        }
    },
    {
        "type": "std::array<.+>",
        "kind": "container",
        "array": {
            "start": "$this._Elems",
            "size": "$T1"
        },
        "_comment": "msvc"
    },
    {
        "type": "std::vector<.+>",
        "kind": "container",
        "darray": {
            "start": "$this._Mypair._Myval2._Myfirst",
            "finish": "$this._Mypair._Myval2._Mylast"
        },
        "_comment": "msvc"
    },
    {
        "type": "std::array<.+>",
        "kind": "container",
        "array": {
            "start": "$this._M_instance",
            "size": "$T1"
        },
        "_comment": "gcc/libstdc++"
    },
    {
        "type": "std::vector<.+>",
        "kind": "container",
        "darray": {
            "start": "$this._M_impl._M_start",
            "finish": "$this._M_impl._M_finish"
        },
        "_comment": "gcc/libstdc++"
    },
    {
        "type": "std::array<.+>",
        "kind": "container",
        "array": {
            "start": "$this.__elems_",
            "size": "$T1"
        },
        "_comment": "llvm/libc++"
    },
    {
        "type": "std::vector<.+>",
        "kind": "container",
        "darray": {
            "start": "$this.__begin_",
            "finish": "$this.__end_"
        },
        "_comment": "llvm/libc++"
    }

    
]