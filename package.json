{
	"name": "graphicaldebugging-vscode",
	"version": "0.7.0",
	"publisher": "AdamWulkiewicz",
	"author": {
		"name": "Adam Wulkiewicz"
	},
	"engines": {
		"vscode": "^1.63.1"
	},
	"license": "MIT",
	"displayName": "Graphical Debugging",
	"description": "Visualization of variables during debugging, e.g. Boost.Geometry models, containers of values, arrays of points, etc.",
	"categories": [
		"Visualization",
		"Debuggers",
		"Other"		
	],
	"keywords": [
		"2d", "array", "boost", "box", "c", "c++", "cartesian", "chart", "complex", "container", "curve",
		"debug", "debugging", "deque", "geographic", "geometry", "gis", "graphical", "javascript", "linestring", "list",
		"plot", "point", "polygon", "python", "rgeo", "ring", "ruby", "segment", "shapely", "spherical", "std", "stl", "tuple", "vector",
		"visualization", "visualize"
	],
	"icon": "resources/icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/awulkiew/graphical-debugging-vscode"
	},
	"bugs": {
		"url": "https://github.com/awulkiew/graphical-debugging-vscode/issues"
	},
	"homepage": "https://github.com/awulkiew/graphical-debugging-vscode/blob/master/README.md",
	"main": "./out/extension.js",
	"activationEvents": [
		"onView:graphicalWatch",
		"onDebug"
	],
	"contributes": {
		"views": {
			"debug": [
				{
					"id": "graphicalWatch",
					"name": "Graphical Watch"
				}
			]
		},
		"commands": [
			{
				"command": "graphicalWatch.add",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.svg",
					"dark": "resources/dark/add.svg"
				}
			},
			{
				"command": "graphicalWatch.removeAll",
				"title": "Remove All",
				"icon": {
					"light": "resources/light/close-all.svg",
					"dark": "resources/dark/close-all.svg"
				}
			},
			{
				"command": "graphicalWatch.edit",
				"title": "Edit",
				"icon": {
					"light": "resources/light/edit.svg",
					"dark": "resources/dark/edit.svg"
				}
			},
			{
				"command": "graphicalWatch.remove",
				"title": "Remove",
				"icon": {
					"light": "resources/light/close.svg",
					"dark": "resources/dark/close.svg"
				}
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "graphicalWatch.add",
					"when": "view == graphicalWatch",
					"group": "navigation"
				},
				{
					"command": "graphicalWatch.removeAll",
					"when": "view == graphicalWatch",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "graphicalWatch.edit",
					"when": "view == graphicalWatch && viewItem == watchVariable",
					"group": "inline"
				},
				{
					"command": "graphicalWatch.remove",
					"when": "view == graphicalWatch && viewItem == watchVariable",
					"group": "inline"
				}
			]
		},
		"configuration": {
			"title": "Graphical Debugging",
			"properties": {
				"graphicalDebugging.additionalTypesDirectory": {
					"type": "string",
					"default": ".",
					"description": "The directory containing JSON files containing additional type definitions. Directory starting with `.` is relative to workspace."
				},
				"graphicalDebugging.geographicProjection": {
					"type": "string",
					"default": "orthographic",
					"enum": [
						"azimuthal equal area",
						"azimuthal equidistant",
						"eckert4",
						"equirectangular",
						"conic equal area",
						"conic conformal",
						"conic equidistant",
						"gnomonic",
						"hammer",
						"kavrayskiy7",
						"mercator",
						"miller",
						"mollweide",
						"natural earth",
						"orthographic",
						"robinson",
						"stereographic",
						"transverse mercator"
					],
					"enumDescriptions": [
						"Lambert azimuthal equal-area projection (azimuthal, equal-area).",
						"Azimuthal equidistant projection (azimuthal, equidistant).",
						"Eckert IV projection (pseudocylindrical, equal-area).",
						"Equirectangular projection (cylindrical, equidistant).",
						"Albers equal-area conic projection (conic, equal-area).",
						"Lambert conformal conic projection (conic, conformal).",
						"Equidistant conic projection (conic, equidistant).",
						"Gnomonic projection (azimuthal, gnomonic).",
						"Hammer projection (pseudoazimuthal, equal-area).",
						"Kavrayskiy VII (pseudocylindrical, compromise).",
						"Mercator projection (cylindrical, conformal).",
						"Miller projection (cylindrical, compromise).",
						"Mollweide projection (pseudocylindrical, equal-area).",
						"Natural Earth projection (pseudocylindrical, compromise).",
						"Orthographic projection (azimuthal, perspective).",
						"Robinson projection (pseudocylindrical, compromise).",
						"Stereographic projection (azimuthal, conformal).",
						"Transverse Mercator projection (cylindrical, conformal)."
					]
				}
			}
		}
	},
	"dependencies": {
		"vscode-debugprotocol": "1.49.0"
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.0",
		"@types/node": "^14.18.9",
		"@types/vscode": "^1.63.1",
		"@typescript-eslint/eslint-plugin": "^4.31.1",
		"@typescript-eslint/parser": "^4.31.1",
		"@vscode/test-electron": "^1.6.2",
		"eslint": "^7.32.0",
		"glob": "^7.1.7",
		"mocha": "^9.2.0",
		"typescript": "^4.5.5"
	}
}
